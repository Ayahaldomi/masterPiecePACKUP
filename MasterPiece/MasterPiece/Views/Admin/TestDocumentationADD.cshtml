@model MasterPiece.Models.Test

@{
    ViewBag.Title = "TestDocumentationADD";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .card {
        padding: 1em;
    }

    button.btn.btn-success {
        margin: 0.5em;
    }

    body {
        background-color: #69acc759;
    }

    .container-fluid {
        padding-top: 120px !important;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="form-horizontal">
            <h4>New Test Form</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Test_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Test_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Test_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Alternative_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Alternative_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Alternative_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Components, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Components, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Components, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Normal_Range, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Normal_Range, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Normal_Range, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Inventory, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Inventory, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Inventory, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Sample_Type, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Sample_Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sample_Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.Expiration_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Expiration_Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Expiration_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="submit" value="Create" class="btn btn-default" />*@
                    <button type="submit" class="btn btn-outline-primary m-1">Create</button>

                </div>
            </div>
        </div>
        </div>
        }

       
